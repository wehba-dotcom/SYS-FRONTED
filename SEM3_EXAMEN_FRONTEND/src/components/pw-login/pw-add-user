
# Enter your script to process requests.
$ConnectionString = $BRK_DHCP_ConnectionString
    $insertQuery = @"
INSERT INTO [BRK_DHCP].[dbo].[users]
    
        (login_name
        ,password
        )
    output inserted.ID
    Values
        (@login_name
        ,@password
        )
"@
    try {
        # Parse Body
        $WebLink = ConvertFrom-Json $Body
        If($WebLink.psobject.Properties['login_name'] -eq $null) { New-PSUApiResponse -Body $([PSCustomObject]@{Error = 'Name parameter not supplied'} | ConvertTo-Json) -StatusCode 400}
        If($WebLink.psobject.Properties['password'] -eq $null) { New-PSUApiResponse -Body $([PSCustomObject]@{Error = 'password parameter not supplied'} | ConvertTo-Json) -StatusCode 400}
       

        $connection = New-Object System.Data.SqlClient.SqlConnection
        $connection.ConnectionString = $ConnectionString
        $connection.Open()

        # Prepare SQL Statement

        $command = New-Object System.Data.SQLClient.SQLCommand
        $command.Connection = $connection
        $paramName = New-Object Data.SqlClient.SqlParameter("@login_name",[Data.SQLDBType]::NText)
        $paramName.Value = $WebLink.login_name
        $paramPassword = New-Object Data.SqlClient.SqlParameter("@password",[Data.SQLDBType]::NText)
        $paramPassword.Value = $WebLink.password
       

        $command.Parameters.Add($paramName) | Out-Null
        $command.Parameters.Add($paramPassword) | Out-Null
        

        $command.CommandText = $insertQuery

        #$command.ExecuteNonQuery() | Out-Null
        $result = $command.ExecuteScalar()

    }
    catch {
        New-PSUApiResponse -StatusCode 500
    }
    finally {
        if(!$connection.State -eq "Closed" -and $null -ne $connection) {
            $connection.Dispose()
            $connection = $null
        }
        $command.Dispose()
        $command = $null
    }
    [PSCustomObject]@{Id = $result}
